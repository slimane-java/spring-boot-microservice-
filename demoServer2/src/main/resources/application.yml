spring:
  profiles:
    active: docker
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      bootstrap-servers: localhost:9092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  main:
    allow-circular-references: true
  security:
    user:
      name: user
      password: user
  datasource:
    url: jdbc:mysql://192.168.99.100:3306/app3?createDatabaseIfNotExist=true
    username:  root
    password:  root
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect
    hibernate:
      ddl-auto: update
    generate-ddl: true
    show-sql: true
  cache:
    type: redis
    redis:
      time-to-live: 60000
      cache-null-values: true
  application:
    name: material-server
  data:
    redis:
      host: 192.168.99.100
      port: 6379

server:
  port: 8082
  servlet:
    context-path: /api-demo-service-support

eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

resilience4j:
  ratelimiter:
    instances:
      allRateLimiter:
        limit-for-period: 2
        limit-refresh-period: 5
        timeout-duration: 0
logging:
  file:
    name: C:\ELK_Stack\elktest.log

demo:
  kafka:
    topic:
      myKafkaTest
